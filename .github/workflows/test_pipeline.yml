name: Runrtime user Github/Azure onboard

on:
  workflow_dispatch:
    inputs:
        branch-name:
          type: string
          description: "RUNTREQ number (e.g: RUNTREQ-1234)"
          required: true
        user-email:
          type: string
          description: "Email address of user"
          required: true
        user-department:
          type: choice
          description: "Department of user"
          required: true
          options:
          - DE-47
          - DE-XY
        ad-invite:
          type: boolean
          description: "Azure access required"
          default: true

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
    check-details:
      runs-on: ubuntu-latest
      steps:
        - name: Check Request number
          run: |
            BRANCH_NAME="${{ github.event.inputs.branch-name }}"
            echo $BRANCH_NAME | grep -E "^RUNTREQ-[0-9]{4}$" -q
            [ $? != 0 ] && { echo "Invalid Branch name";exit 1; } || echo "Valid request" 
        
        - name: Check user email
          run: |
            USER_EMAIL="${{ github.event.inputs.user-email }}"
            echo $USER_EMAIL | grep -E '[[:alnum:]"[[:alnum:]%&'"'"'*+/=?`{|}~^.-]+@[[:alnum:]_-]+(\.[[:alnum:]_-]+)*\.[[:alpha:]]{2,6}' -q
            [ $? != 0 ] && { echo "Invalid Email name";exit 1; } || echo "Valid email"

    perform-action:
      needs: check-details
      runs-on: ubuntu-latest
      steps:        
        - name: Setup python
          uses: actions/setup-python@v5
          with:
            python-version: '3.8'
        
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            path: repo

        - name: Check email already used
          working-directory: repo
          run: |
            USER_EMAIL="${{ github.event.inputs.user-email }}"
            echo "Email to check in file $USER_EMAIL"
            grep -qi $USER_EMAIL ./example.tf 
            [ $? == 0 ] && { echo "Email alreay configured";exit 1; } || echo "hello"

        - name: Install requirements
          run: pip install -r requirements.txt
          working-directory: repo

        - name: Executing script
          working-directory: repo
          run: |
            echo "Performing action: ${{ github.event.inputs.branch-name }} ${{ github.event.inputs.user-email }} ${{ github.event.inputs.user-department }} ${{ github.event.inputs.ad-invite }}"
            if [ ${{ github.event.inputs.ad-invite }} ]
            then
              python3 ./app.py -m ${{ github.event.inputs.user-email }} -d ${{ github.event.inputs.user-department }} --Azure
            else
              python3 ./app.py -m ${{ github.event.inputs.user-email }} -d ${{ github.event.inputs.user-department }}
            fi
        
        - name: Commit changes for new user
          working-directory: repo
          run: |
            ls -ltr
            cat example.tf
            git checkout -b ${{ github.event.inputs.branch-name }}
            git add .
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "[${{ github.event.inputs.branch-name }}] Onboard ${{ github.event.inputs.user-name }} into xyz"
            git push --set-upstream origin ${{ github.event.inputs.branch-name }}

        - name: Get a GitHub app token to give this action access to our repo
          id: get_token
          uses: getsentry/action-github-app-token@v2.0.0
          with:
            private_key: ${{ secrets.CODE_BOT_APP_PEM }}
            app_id: ${{ secrets.CODE_BOT_APP_ID }}

        - name: Create pull request
          working-directory: repo
          run: |
            echo "token ${{ steps.get_token.outputs.token }}"
            gh pr create -B 'main' -H ${{ github.event.inputs.branch-name }} --title '[${{ github.event.inputs.branch-name }}] Onboard ${{ github.event.inputs.user-name }} into Orbit' --body 'Created by Github action ðŸ’ª'
          env:
            GH_TOKEN: ${{ steps.get_token.outputs.token }}
            GH_HOST: github.com
